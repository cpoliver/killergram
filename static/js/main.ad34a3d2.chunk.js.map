{"version":3,"sources":["i18n.ts","resources/logo.svg","components/Icon/Icon.tsx","components/Button/Button.tsx","common/constants.ts","api/index.tsx","api/data/index.ts","components/ProfileButton/ProfileButton.tsx","theme/utils.ts","reportWebVitals.ts","components/AppBar/AppBar.tsx","components/ColorModeSwitcher/ColorModeSwitcher.tsx","components/ErrorMessage/ErrorMessage.tsx","components/Following/FollowingProfile.tsx","components/Following/Following.tsx","components/ToggleButton/ToggleButton.tsx","components/Posts/PostFooter.tsx","components/Posts/Post.tsx","components/Posts/PostSkeleton.tsx","components/Posts/Posts.tsx","components/ProfileSwitcher/ProfileSwitcher.tsx","components/Suggestions/Suggestion.tsx","components/Suggestions/Suggestions.tsx","components/ThemeProvider/DynamicColorMode.tsx","theme/colors.ts","theme/components.ts","theme/index.tsx","components/ThemeProvider/ThemeProvider.tsx","app/index.tsx","index.tsx"],"names":["i18next","use","initReactI18next","init","resources","en","translation","Test","it","lng","interpolation","escapeValue","_g","_defs","defaults","viewBox","defaultProps","boxSize","color","ColorModeDark","createIcon","displayName","d","ColorModeLight","CommentIcon","DirectMessagesIcon","EllipsisIcon","path","fill","cx","cy","r","EmojiIcon","FindPeopleIcon","HeartFilledIcon","HeartOutlineIcon","HomeIcon","NewPostIcon","SaveFilledIcon","SaveOutlineIcon","ActivityFeedButton","buttonProps","iconProps","size","icon","CommentButton","DirectMessagesButton","EllipsisButton","EmojiButton","FindPeopleButton","HomeButton","NewPostButton","API_URL","useGetProfiles","posts","profiles","useQuery","a","axios","get","data","useGetUserProfile","profile_name","profile_fullname","profile_picture","ProfileButton","t","useTranslation","bg","name","src","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","ref","id","clipPath","width","height","startColor","endColor","onPerfEntry","ForwardRef","focusStyles","_focusVisible","shadow","outline","_focus","skeletonProps","fadeDuration","loadingAnimation","keyframes","from","borderColor","background","opacity","to","AppBar","align","as","borderBottomColor","borderBottomWidth","h","justify","left","pos","px","py","right","zIndex","direction","spacing","Brand","flex","tabIndex","Search","maxW","placeholder","textAlign","Nav","justifyContent","ColorModeSwitcher","useColorMode","colorMode","toggleColorMode","ColorModeIcon","mode","textTransform","isRound","onClick","ErrorMessage","message","onRetry","stackProps","borderRadius","borderWidth","p","fontSize","lineHeight","mt","variant","FollowingProfile","cursor","layerStyle","overflow","textOverflow","w","whiteSpace","FollowingProfileSkeleton","Following","error","isLoading","refetch","response","FollowingLoaded","map","profile","FollowingLoading","Array","_","ToggleButton","icons","labels","defaultIsToggled","isToggled","iconButtonProps","useState","setIsToggled","index","LikeButton","SaveButton","PostFooter","comment","setComment","label","borderTopWidth","value","onChange","fontWeight","isDisabled","Post","post","alt","post_text","objectFit","post_image","likes","count","text","username","Header","ActionButtons","Likes","children","Comment","canLike","getDaysAgo","date","diffInTime","Date","getTime","Math","round","Comments","comments","pb","pl","pr","_hover","textDecoration","slice","days","PostSkeleton","Posts","PostsLoaded","PostsLoading","ProfileSwitcher","ProfileSwitcherLoaded","ProfileSwitcherLoading","follower","suggestion","Suggestion","suggestionType","SuggestionSkeleton","Suggestions","suggestions","SuggestionsLoaded","SuggestionsLoading","DynamicColorMode","theme","useTheme","colors","modes","common","primary","secondary","tertiary","light","backgroundAlt","border","text1","text2","text3","text4","dark","defaultTheme","Button","variants","plain","link","Container","baseStyle","Heading","Input","field","Link","Skeleton","Text","layerStyles","avatarBorder","square","_after","content","display","pt","loading","animation","skeleton","components","config","initialColorMode","useSystemColorMode","ThemeProvider","extendTheme","App","AppShell","bottom","top","minH","my","Content","SideBar","getFullYear","queryClient","QueryClient","defaultOptions","queries","refetchInterval","refetchOnWindowFocus","render","StrictMode","client","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.ad34a3d2.chunk.js","sourcesContent":["import i18next from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst en = {\n  translation: {\n    Test: \"ENGLISH\",\n  },\n}\n\nconst it: typeof en = {\n  translation: {\n    Test: \"ITALIANO\",\n  },\n}\n\ni18next\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: { en, it },\n    lng: \"en\",\n    interpolation: { escapeValue: false },\n  })\n\nexport { i18next }\n","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 458 111\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.6 14.14C18.82 14.14 17.81 14.36 16.81 14.7C13.81 15.81 10.36 18.26 8.35 19.26C7.57 19.6 6.68 19.82 5.9 19.82C3.12 19.82 0.45 17.93 0 16.48C2.23 14.36 5.01 12.14 8.13 10.13C12.25 7.57001 16.48 5.45001 19.6 5.45001C19.93 5.45001 20.27 5.56001 20.49 5.56001C23.61 6.00001 26.39 7.23001 28.62 8.90001C32.63 11.9 34.97 16.13 35.3 18.59C35.41 20.14 35.52 21.93 35.52 24.04C35.52 28.5 35.18 33.95 34.85 40.07C38.97 36.51 43.76 31.83 48.43 26.94C55.78 19.26 62.68 11.35 65.35 7.23001C67.35 7.57001 70.14 11.01 70.14 15.03C70.14 17.03 68.8 19.37 66.91 21.82C64.57 24.82 48.98 40.08 40.19 45.42C42.86 47.98 45.64 50.99 48.43 54.22C51.43 57.78 55.89 63.01 60.45 68.02C67.02 75.26 73.7 82.05 77.15 83.61C77.15 83.61 73.59 88.29 67.24 88.29C66.46 88.29 65.57 88.29 64.68 88.07C61.57 87.51 58.11 84.06 54.21 79.27C51.32 75.71 48.42 71.26 45.2 66.91C42.86 63.68 40.41 60.23 37.96 57L33.95 51.88C33.28 62.23 33.17 65.79 33.17 71.92V87.95C29.61 87.95 21.04 84.05 20.48 77.71C20.37 76.6 20.37 75.15 20.37 73.59C20.37 67.92 20.93 59.68 21.6 51.99C19.48 50.32 18.48 46.87 18.48 43.53C18.48 40.86 19.37 37.07 22.71 36.74C23.16 31.51 23.49 25.94 23.49 22.05C23.49 19.05 23.38 16.82 22.71 15.82C22.05 14.69 20.93 14.14 19.6 14.14Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.17 65.57C72.17 60.23 72.72 54.33 73.17 48.32C73.72 42.08 74.5 35.63 74.5 29.17H75.39C78.51 29.17 82.96 30.73 85.41 35.96C86.42 38.19 86.75 40.75 86.75 43.64C86.75 46.54 86.42 49.76 86.19 53.21C85.75 58.89 85.08 64.57 85.08 70.58C85.08 73.92 85.19 76.93 86.42 78.48C86.97 79.26 87.87 79.59 88.98 79.59C90.09 79.59 91.65 78.59 92.77 77.47C95.66 74.8 97.89 70.12 98.22 68.56C99.56 68.56 101.22 70.45 101.22 72.34C101.22 74.12 100.44 76.68 99.33 78.69C96.21 84.26 91.87 87.49 87.08 87.49C80.18 87.49 75.5 83.26 73.83 78.36C72.28 73.7 72.17 69.8 72.17 65.57ZM85.97 9.91C88.64 11.58 90.65 14.14 90.65 17.26C90.65 20.38 87.42 21.82 84.41 21.82C81.07 21.82 77.29 20.04 74.84 17.36C73.39 15.69 72.61 13.91 72.61 12.35C72.61 11.35 72.95 10.46 73.5 9.68C74.5 8.34 76.4 7.56 78.96 7.56C81.19 7.57 83.75 8.46 85.97 9.91Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.89 29.17C94.89 19.82 95.33 10.8 96.56 6.13001C97.56 1.90001 100.12 0.0100098 103.13 0.0100098C106.69 0.0100098 109.58 1.57001 111.81 3.90001C115.82 8.24001 117.71 15.37 117.71 21.27C117.71 32.4 113.93 43.65 109.58 55.67V58.45C109.58 69.02 110.25 77.71 114.14 80.05C114.7 80.39 115.25 80.49 115.81 80.49C117.59 80.49 119.37 79.04 120.93 77.15C123.04 74.59 124.6 71.14 125.05 68.69C126.28 68.91 128.06 70.92 128.06 74.03C128.06 75.92 127.5 77.14 126.72 78.48C124.6 82.04 120.6 85.72 118.04 86.72C116.26 87.39 114.48 87.72 112.7 87.72C108.47 87.72 104.46 85.94 101.57 82.04C98.23 77.48 97.11 67.45 95.89 54.66C95.23 47.54 94.89 37.96 94.89 29.17ZM111.04 22.93C111.04 18.92 110.26 15.58 108.03 15.58C105.92 15.58 105.58 19.92 105.58 25.6C105.58 33.06 106.02 39.51 106.8 44.86C106.81 44.86 111.04 30.83 111.04 22.93Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.51 29.17C121.51 19.82 121.95 10.8 123.18 6.13001C124.19 1.90001 126.74 0.0100098 129.75 0.0100098C133.31 0.0100098 136.2 1.57001 138.43 3.90001C142.44 8.24001 144.33 15.37 144.33 21.27C144.33 32.4 140.55 43.65 136.2 55.67V58.45C136.2 69.02 136.87 77.71 140.76 80.05C141.32 80.39 141.87 80.49 142.43 80.49C144.21 80.49 145.99 79.04 147.55 77.15C149.66 74.59 151.22 71.14 151.67 68.69C152.9 68.91 154.68 70.92 154.68 74.03C154.68 75.92 154.12 77.14 153.34 78.48C151.22 82.04 147.22 85.72 144.66 86.72C142.88 87.39 141.1 87.72 139.32 87.72C135.09 87.72 131.08 85.94 128.19 82.04C124.85 77.48 123.73 67.45 122.51 54.66C121.85 47.54 121.51 37.96 121.51 29.17ZM137.66 22.93C137.66 18.92 136.88 15.58 134.65 15.58C132.54 15.58 132.2 19.92 132.2 25.6C132.2 33.06 132.64 39.51 133.42 44.86C133.42 44.86 137.66 30.83 137.66 22.93Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.16 58.22C162.16 65.34 163.5 72.25 167.28 76.14C169.84 78.92 172.85 80.15 175.74 80.15C179.52 80.15 183.42 78.26 186.54 75.14C189.66 72.03 192 67.68 192.78 63.01C194.89 63.01 196.45 65.24 196.45 68.13C196.45 68.57 196.45 69.02 196.34 69.47C195.56 73.81 193.33 77.6 190.1 80.6C185.54 84.83 179.3 87.39 172.62 87.39C166.05 87.39 158.81 85.16 153.81 78.82C149.8 73.81 148.02 66.35 148.02 58.67C148.02 50.88 149.91 42.86 153.92 37.07C157.93 31.17 163.72 28.83 169.28 28.83C175.96 28.83 182.41 32.17 184.42 36.63C185.31 38.41 185.65 40.19 185.65 41.97C185.65 45.98 183.53 49.65 179.64 52.77C174.85 56.55 168.17 58.22 162.16 58.22ZM162.39 52.99C165.17 52.44 167.73 51.54 170.52 49.76C173.86 47.42 175.64 43.41 175.64 40.41C175.64 37.29 173.64 34.4 171.3 34.4C166.95 34.4 163.39 44.08 162.39 52.99Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.93 86.39C202.15 86.83 201.26 86.95 200.37 86.95C196.81 86.95 193.02 83.95 191.91 80.94C190.57 77.6 190.13 69.92 190.13 61.79C190.13 57.23 190.24 51.1 190.35 46.76C190.46 43.2 190.57 39.97 190.57 37.41C190.57 35.07 190.35 33.29 190.13 32.07C190.91 31.84 191.69 31.73 192.47 31.73C195.7 31.73 198.59 33.73 200.37 36.63C202.6 39.97 202.82 44.53 202.82 49.21V53.55C203.82 50.21 205.05 47.1 206.16 44.98C206.05 44.2 205.94 43.31 205.94 42.53C205.94 41.42 206.05 39.97 206.38 38.52C207.16 35.29 208.38 32.85 210.06 31.51C210.73 30.95 211.51 30.73 212.4 30.73C215.96 30.73 220.75 34.51 220.75 38.97C220.75 41.98 216.19 47.21 216.19 47.21C216.19 47.21 218.19 53 223.54 54.11C223.88 54.22 224.32 54.22 224.65 54.22C228.21 54.22 231.55 51.1 232.44 47.54C234.33 47.76 235.56 49.43 235.56 52.1C235.56 57.78 230.33 61.23 223.98 61.23C217.75 61.23 212.29 58.23 209.29 53.66C207.84 56 206.39 59.11 205.17 62.34C203.61 66.35 202.5 70.69 202.5 73.58C202.49 78.15 202.6 82.04 202.93 86.39Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.39 74.36C258.39 69.02 259.5 62 259.5 59.89C256.72 68.35 253.38 77.7 249.26 82.82C247.48 85.05 245.14 86.94 241.91 86.94C239.46 86.94 237.02 85.94 234.68 83.94C231.9 81.49 229.45 77.7 227.78 72.36C226.67 68.58 226 64.46 226 60.34C226 52.99 227.89 45.76 231.34 40.08C235.02 34.29 240.58 30.29 247.37 30.29C251.15 30.29 256.61 32.62 259.39 37.75C259.72 36.53 259.95 35.19 260.06 34.08C260.17 33.52 261.17 33.3 262.4 33.3C265.63 33.3 270.53 35.19 272.2 38.09C272.53 38.76 272.64 39.31 272.64 40.09C271.97 44.65 272.42 48.11 271.97 56.01C271.64 62.13 271.08 76.71 271.08 78.05C273.42 76.38 275.64 74.71 277.53 73.15C279.76 71.37 281.54 69.48 282.76 67.81C283.98 68.48 285.54 70.04 285.54 72.37C285.54 73.48 284.98 75.04 283.87 76.6C281.08 80.38 275.97 83.83 270.29 86.84C269.51 93.08 267.73 99.64 264.05 103.99C260.49 108.22 253.92 110.22 248.02 110.22C244.01 110.22 235 109 235 102.87C235 101.65 235.44 100.42 236.11 99.2C238.45 95.52 244.13 92.74 249.25 90.29C252.7 88.62 258.16 85.73 258.16 85.73C258.17 83.6 258.39 80.15 258.39 74.36ZM252.15 65.13C254.71 59.45 256.61 52.66 258.39 46.2C257.72 41.3 254.27 37.41 250.93 37.41C246.03 37.41 242.02 49.21 240.91 58.34C240.58 61.24 240.47 63.8 240.47 66.02C240.47 73.7 242.14 77.38 244.37 77.38C246.48 77.37 249.15 71.58 252.15 65.13ZM257.61 93.07C255.94 93.74 249.15 96.97 247.37 98.3C246.7 98.75 245.37 99.75 245.37 100.64C245.37 101.86 247.15 102.64 249.27 102.64C251.38 102.64 253.94 101.75 255.28 99.52C256.39 97.52 257.05 95.41 257.61 93.07Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M292.93 86.39C292.15 86.83 291.26 86.95 290.37 86.95C286.81 86.95 283.02 83.95 281.91 80.94C280.57 77.6 280.13 69.92 280.13 61.79C280.13 57.23 280.24 51.1 280.35 46.76C280.46 43.2 280.57 39.97 280.57 37.41C280.57 35.07 280.35 33.29 280.13 32.07C280.91 31.84 281.69 31.73 282.47 31.73C285.7 31.73 288.59 33.73 290.37 36.63C292.6 39.97 292.82 44.53 292.82 49.21V53.55C293.82 50.21 295.05 47.1 296.16 44.98C296.05 44.2 295.94 43.31 295.94 42.53C295.94 41.42 296.05 39.97 296.38 38.52C297.16 35.29 298.38 32.85 300.06 31.51C300.73 30.95 301.51 30.73 302.4 30.73C305.96 30.73 310.75 34.51 310.75 38.97C310.75 41.98 306.19 47.21 306.19 47.21C306.19 47.21 308.19 53 313.54 54.11C313.88 54.22 314.32 54.22 314.65 54.22C318.21 54.22 321.55 51.1 322.45 47.54C324.34 47.76 325.57 49.43 325.57 52.1C325.57 57.78 320.34 61.23 313.99 61.23C307.76 61.23 302.3 58.23 299.3 53.66C297.85 56 296.4 59.11 295.18 62.34C293.62 66.35 292.51 70.69 292.51 73.58C292.49 78.15 292.6 82.04 292.93 86.39Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M364.08 80.38C368.09 80.38 372.65 72.48 373.65 68.69C374.88 69.02 376.43 70.47 376.43 73.36C376.43 74.14 376.32 74.92 376.1 75.81C374.21 81.38 368.64 87.39 361.74 87.39C359.07 87.39 355.29 85.94 352.95 84.16C351.17 82.82 349.72 81.04 349.27 79.15C348.27 74.69 347.93 71.91 347.93 69.13C347.93 67.68 348.04 66.23 348.16 64.45C348.16 64.01 348.27 63.56 348.27 63.12C346.71 68.46 341.37 84.16 334.36 86.61C333.36 86.95 332.36 87.06 331.46 87.06C327.68 87.06 324 84.5 321.33 80.27C318.33 75.6 316.32 68.8 316.1 61.68V60.46C316.1 49.11 320.66 35.41 329.9 31.74C331.79 30.96 333.8 30.63 335.8 30.63C341.26 30.63 346.6 33.3 349.94 38.09C350.16 36.87 350.27 35.75 350.38 34.08C350.49 32.97 351.27 32.41 352.5 32.41C355.95 32.41 362.18 36.42 362.29 41.32C362.29 42.43 362.07 45.22 361.73 48.56C361.06 54.91 360.28 63.48 360.28 69.93C360.28 75.16 360.84 79.17 362.51 79.95C363.08 80.15 363.53 80.38 364.08 80.38ZM339.26 71.58C342.82 65.46 346.38 55.22 348.39 46.2C348.05 42.64 345.16 37.63 341.49 37.63C340.27 37.63 338.93 38.19 337.59 39.52C333.03 44.31 330.36 57.11 330.36 66.24C330.36 71.92 331.92 77.26 333.59 77.26C335.26 77.26 337.25 75.03 339.26 71.58Z\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M442.93 87.72C437.59 87.72 431.69 83.38 430.02 77.03C429.13 73.58 428.8 70.13 428.8 66.45C428.8 61 429.47 55.54 429.47 49.53C429.47 48.64 429.47 46.19 428.91 44.07C428.47 42.4 427.8 41.07 426.57 41.07C425.79 41.07 424.68 42.18 423.57 44.19C421.45 47.87 419.01 54.1 416.89 60.78C413.78 70.47 411.22 80.82 411.22 84.72V85.39C410.11 85.73 408.88 85.95 407.54 85.95C403.98 85.95 400.19 84.39 399.19 80.61C398.97 79.61 398.85 78.49 398.85 77.16C398.85 73.27 399.63 67.92 399.85 61.46C399.96 59.01 399.96 56.34 399.96 53.89C399.96 47.1 399.52 41.31 397.18 41.31C394.84 41.31 390.94 51 387.72 61.57C384.82 71.14 382.49 81.39 382.49 85.84C381.93 86.06 381.38 86.18 380.6 86.18C376.7 86.18 370.47 83.06 370.13 78.83C370.02 77.27 369.91 75.05 369.91 72.48C369.91 67.47 370.13 61.24 370.47 56.45C370.81 50.33 371.36 45.76 371.36 41.09C371.36 38.75 371.25 36.42 370.81 33.86C371.48 33.64 372.26 33.52 373.04 33.52C376.27 33.52 380.16 35.19 381.72 38.53C382.39 39.98 382.94 43.09 382.94 47.33C382.94 48.33 382.94 49.44 382.16 62.36C382.5 60.8 384.83 51.22 387.84 43.55C389.73 38.65 391.96 32.53 398.53 32.53C403.42 32.53 408.22 36.2 410 40.54C411.55 44.33 411.89 48.56 411.89 52.68C411.89 55.13 411.78 57.47 411.67 60.81C413.56 53.24 415.9 47.9 418.02 42.33C419.91 37.21 423.36 32.42 428.37 32.42C433.05 32.42 439.17 34.98 441.4 42.33C441.96 44.45 442.18 46.67 442.18 49.12C442.18 52.46 441.84 56.02 441.62 59.69C441.51 61.92 441.07 66.71 441.07 71.04C441.07 75.16 441.4 78.94 442.96 79.95C443.52 80.39 444.07 80.5 444.74 80.5C446.41 80.5 448.08 79.17 449.64 77.27C451.98 74.37 453.98 70.37 454.54 68.36C455.76 68.58 457.32 70.14 457.32 72.92C457.32 73.7 457.21 74.48 456.98 75.37C455.42 80.83 449.63 86.17 445.4 87.39C444.61 87.61 443.83 87.72 442.93 87.72Z\",\n    fill: \"currentColor\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 457.3,\n    height: 110.21,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.de32632c.svg\";\nexport { ForwardRef as ReactComponent };","import { createIcon } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nconst defaults = {\n  viewBox: \"0 0 48 48\",\n  defaultProps: { boxSize: 6, color: \"mode.text1\" },\n}\n\nexport const ColorModeDark = createIcon({\n  displayName: \"ColorModeDark\",\n  d: \"M12 3a9 9 0 109 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 01-4.4 2.26 5.403 5.403 0 01-3.14-9.8c-.44-.06-.9-.1-1.36-.1z\",\n  viewBox: \"0 0 24 24\",\n})\n\nexport const ColorModeLight = createIcon({\n  displayName: \"ColorModeLight\",\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58a.996.996 0 00-1.41 0 .996.996 0 000 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37a.996.996 0 00-1.41 0 .996.996 0 000 1.41l1.06 1.06c.39.39 1.03.39 1.41 0a.996.996 0 000-1.41l-1.06-1.06zm1.06-10.96a.996.996 0 000-1.41.996.996 0 00-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36a.996.996 0 000-1.41.996.996 0 00-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z\",\n  viewBox: \"0 0 24 24\",\n})\n\nexport const CommentIcon = createIcon({\n  ...defaults,\n  displayName: \"CommentIcon\",\n  d: \"M47.5 46.1l-2.8-11c1.8-3.3 2.8-7.1 2.8-11.1C47.5 11 37 .5 24 .5S.5 11 .5 24 11 47.5 24 47.5c4 0 7.8-1 11.1-2.8l11 2.8c.8.2 1.6-.6 1.4-1.4zm-3-22.1c0 4-1 7-2.6 10-.2.4-.3.9-.2 1.4l2.1 8.4-8.3-2.1c-.5-.1-1-.1-1.4.2-1.8 1-5.2 2.6-10 2.6-11.4 0-20.6-9.2-20.6-20.5S12.7 3.5 24 3.5 44.5 12.7 44.5 24z\",\n})\n\nexport const DirectMessagesIcon = createIcon({\n  ...defaults,\n  displayName: \"DirectMessagesIcon\",\n  d: \"M47.8 3.8c-.3-.5-.8-.8-1.3-.8h-45C.9 3.1.3 3.5.1 4S0 5.2.4 5.7l15.9 15.6 5.5 22.6c.1.6.6 1 1.2 1.1h.2c.5 0 1-.3 1.3-.7l23.2-39c.4-.4.4-1 .1-1.5zM5.2 6.1h35.5L18 18.7 5.2 6.1zm18.7 33.6l-4.4-18.4L42.4 8.6 23.9 39.7z\",\n})\n\nexport const EllipsisIcon = createIcon({\n  ...defaults,\n  displayName: \"EllipsisIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <svg fill=\"currentColor\">\n      <circle cx=\"12\" cy=\"12\" r=\"1.5\" />\n      <circle cx=\"6.5\" cy=\"12\" r=\"1.5\" />\n      <circle cx=\"17.5\" cy=\"12\" r=\"1.5\" />\n    </svg>\n  ),\n})\n\nexport const EmojiIcon = createIcon({\n  ...defaults,\n  displayName: \"EllipsisIcon\",\n  path: (\n    <svg fill=\"currentColor\">\n      <path d=\"M24 48C10.8 48 0 37.2 0 24S10.8 0 24 0s24 10.8 24 24-10.8 24-24 24zm0-45C12.4 3 3 12.4 3 24s9.4 21 21 21 21-9.4 21-21S35.6 3 24 3z\"></path>\n      <path d=\"M34.9 24c0-1.4-1.1-2.5-2.5-2.5s-2.5 1.1-2.5 2.5 1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5zm-21.8 0c0-1.4 1.1-2.5 2.5-2.5s2.5 1.1 2.5 2.5-1.1 2.5-2.5 2.5-2.5-1.1-2.5-2.5zM24 37.3c-5.2 0-8-3.5-8.2-3.7-.5-.6-.4-1.6.2-2.1.6-.5 1.6-.4 2.1.2.1.1 2.1 2.5 5.8 2.5 3.7 0 5.8-2.5 5.8-2.5.5-.6 1.5-.7 2.1-.2.6.5.7 1.5.2 2.1 0 .2-2.8 3.7-8 3.7z\"></path>\n    </svg>\n  ),\n})\n\nexport const FindPeopleIcon = createIcon({\n  ...defaults,\n  displayName: \"FindPeopleIcon\",\n  d: \"M24 0C10.8 0 0 10.8 0 24s10.8 24 24 24 24-10.8 24-24S37.2 0 24 0zm0 45C12.4 45 3 35.6 3 24S12.4 3 24 3s21 9.4 21 21-9.4 21-21 21zm10.2-33.2l-14.8 7c-.3.1-.6.4-.7.7l-7 14.8c-.3.6-.2 1.3.3 1.7.3.3.7.4 1.1.4.2 0 .4 0 .6-.1l14.8-7c.3-.1.6-.4.7-.7l7-14.8c.3-.6.2-1.3-.3-1.7-.4-.5-1.1-.6-1.7-.3zm-7.4 15l-5.5-5.5 10.5-5-5 10.5z\",\n})\n\nexport const HeartFilledIcon = createIcon({\n  ...defaults,\n  defaultProps: {\n    ...defaults.defaultProps,\n    color: \"tomato\",\n  },\n  displayName: \"HeartFilledIcon\",\n  d: \"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\",\n})\n\nexport const HeartOutlineIcon = createIcon({\n  ...defaults,\n  displayName: \"HeartOutlineIcon\",\n  d: \"M34.6 6.1c5.7 0 10.4 5.2 10.4 11.5 0 6.8-5.9 11-11.5 16S25 41.3 24 41.9c-1.1-.7-4.7-4-9.5-8.3-5.7-5-11.5-9.2-11.5-16C3 11.3 7.7 6.1 13.4 6.1c4.2 0 6.5 2 8.1 4.3 1.9 2.6 2.2 3.9 2.5 3.9.3 0 .6-1.3 2.5-3.9 1.6-2.3 3.9-4.3 8.1-4.3m0-3c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5.6 0 1.1-.2 1.6-.5 1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\",\n})\n\nexport const HomeIcon = createIcon({\n  ...defaults,\n  displayName: \"HomeIcon\",\n  d: \"M45.5 48H30.1c-.8 0-1.5-.7-1.5-1.5V34.2c0-2.6-2.1-4.6-4.6-4.6s-4.6 2.1-4.6 4.6v12.3c0 .8-.7 1.5-1.5 1.5H2.5c-.8 0-1.5-.7-1.5-1.5V23c0-.4.2-.8.4-1.1L22.9.4c.6-.6 1.6-.6 2.1 0l21.5 21.5c.3.3.4.7.4 1.1v23.5c.1.8-.6 1.5-1.4 1.5z\",\n})\n\nexport const NewPostIcon = createIcon({\n  ...defaults,\n  displayName: \"NewPostIcon\",\n  path: (\n    <svg fill=\"currentColor\">\n      <path d=\"M31.8 48H16.2c-6.6 0-9.6-1.6-12.1-4C1.6 41.4 0 38.4 0 31.8V16.2C0 9.6 1.6 6.6 4 4.1 6.6 1.6 9.6 0 16.2 0h15.6c6.6 0 9.6 1.6 12.1 4C46.4 6.6 48 9.6 48 16.2v15.6c0 6.6-1.6 9.6-4 12.1-2.6 2.5-5.6 4.1-12.2 4.1zM16.2 3C10 3 7.8 4.6 6.1 6.2 4.6 7.8 3 10 3 16.2v15.6c0 6.2 1.6 8.4 3.2 10.1 1.6 1.6 3.8 3.1 10 3.1h15.6c6.2 0 8.4-1.6 10.1-3.2 1.6-1.6 3.1-3.8 3.1-10V16.2c0-6.2-1.6-8.4-3.2-10.1C40.2 4.6 38 3 31.8 3H16.2z\" />\n      <path d=\"M36.3 25.5H11.7c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5h24.6c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z\" />\n      <path d=\"M24 37.8c-.8 0-1.5-.7-1.5-1.5V11.7c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5v24.6c0 .8-.7 1.5-1.5 1.5z\" />\n    </svg>\n  ),\n})\n\nexport const SaveFilledIcon = createIcon({\n  ...defaults,\n  displayName: \"SaveOutlineIcon\",\n  d: \"M43.5 48c-.4 0-.8-.2-1.1-.4L24 28.9 5.6 47.6c-.4.4-1.1.6-1.6.3-.6-.2-1-.8-1-1.4v-45C3 .7 3.7 0 4.5 0h39c.8 0 1.5.7 1.5 1.5v45c0 .6-.4 1.2-.9 1.4-.2.1-.4.1-.6.1z\",\n})\n\nexport const SaveOutlineIcon = createIcon({\n  ...defaults,\n  displayName: \"SaveOutlineIcon\",\n  d: \"M43.5 48c-.4 0-.8-.2-1.1-.4L24 29 5.6 47.6c-.4.4-1.1.6-1.6.3-.6-.2-1-.8-1-1.4v-45C3 .7 3.7 0 4.5 0h39c.8 0 1.5.7 1.5 1.5v45c0 .6-.4 1.2-.9 1.4-.2.1-.4.1-.6.1zM24 26c.8 0 1.6.3 2.2.9l15.8 16V3H6v39.9l15.8-16c.6-.6 1.4-.9 2.2-.9z\",\n})\n","import { IconButton, IconButtonProps, IconProps } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport * as Icon from \"../Icon/Icon\"\n\nexport type ButtonProps = {\n  buttonProps?: Omit<IconButtonProps, \"aria-label\">\n  iconProps?: IconProps\n}\n\nexport const ActivityFeedButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton\n    size=\"md\"\n    {...buttonProps}\n    aria-label=\"Activity feed\"\n    icon={<Icon.HeartOutlineIcon {...(iconProps as any)} />}\n  />\n)\n\nexport const CommentButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton size=\"md\" {...buttonProps} aria-label=\"Comment\" icon={<Icon.CommentIcon {...(iconProps as any)} />} />\n)\n\nexport const DirectMessagesButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton\n    size=\"md\"\n    {...buttonProps}\n    aria-label=\"Direct messages\"\n    icon={<Icon.DirectMessagesIcon {...(iconProps as any)} />}\n  />\n)\n\nexport const EllipsisButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton\n    size=\"md\"\n    {...buttonProps}\n    aria-label=\"More options\"\n    icon={<Icon.EllipsisIcon {...(iconProps as any)} />}\n  />\n)\n\nexport const EmojiButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton size=\"md\" {...buttonProps} aria-label=\"Emoji\" icon={<Icon.EmojiIcon {...(iconProps as any)} />} />\n)\n\nexport const FindPeopleButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton\n    size=\"md\"\n    {...buttonProps}\n    aria-label=\"Find people\"\n    icon={<Icon.FindPeopleIcon {...(iconProps as any)} />}\n  />\n)\n\nexport const HomeButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton size=\"md\" {...buttonProps} aria-label=\"Home\" icon={<Icon.HomeIcon {...(iconProps as any)} />} />\n)\n\nexport const NewPostButton: React.FC<ButtonProps> = ({ buttonProps, iconProps }) => (\n  <IconButton size=\"md\" {...buttonProps} aria-label=\"New post\" icon={<Icon.NewPostIcon {...(iconProps as any)} />} />\n)\n","export const API_URL = \"https://flynn.boolean.careers/exercises/api/boolgram\"\n\nexport const POSTS_URL = `${API_URL}/posts`\n\nexport const PROFILES_URL = `${API_URL}/profiles`\n","import axios, { AxiosError } from \"axios\"\nimport { useQuery } from \"react-query\"\n\nimport { Post, Profile, UserProfile } from \"./data\"\nimport { API_URL } from \"common/constants\"\n\nexport * from \"./data\"\n\nexport const useGetProfiles = () =>\n  useQuery<Profile[], AxiosError>(\"profiles\", async () => {\n    const { data } = await axios.get(`${API_URL}/profiles`)\n\n    return data\n  })\n\nexport const useGetPosts = () =>\n  useQuery<Post[], AxiosError>(\"posts\", async () => {\n    const { data } = await axios.get(`${API_URL}/posts`)\n\n    return data\n  })\n\nexport const useGetUserProfile = () =>\n  useQuery<UserProfile, AxiosError>(\"userProfile\", async () => {\n    const { data } = await axios.get(`${API_URL}/posts`)\n\n    // get the user info from the first post to simulate getting the logged in user\n    const { profile_name, profile_fullname, profile_picture } = data[0] as UserProfile\n\n    return { profile_name, profile_fullname, profile_picture }\n  })\n","import posts from \"./posts.json\"\nimport profiles from \"./profiles.json\"\nimport suggestions from \"./suggestions.json\"\n\nexport { posts, profiles, suggestions }\n\nexport const post = posts[0]\n\nexport const profile = profiles[0]\n\nexport type Profile = typeof profile\n\nexport type UserProfile = Profile & Pick<Post, \"profile_fullname\">\n\nexport type Post = typeof post\n\nexport type Comment = typeof post.comments[0]\n\nexport type Like = typeof post.likes[0]\n\nexport type Date = typeof post.date\n","import { Avatar, IconButton, IconButtonProps } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { useGetUserProfile } from \"api\"\n\nexport type ButtonProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ProfileButton: React.FC<ButtonProps> = (buttonProps) => {\n  const { t } = useTranslation()\n  const { data } = useGetUserProfile()\n\n  return (\n    <IconButton\n      size=\"md\"\n      {...buttonProps}\n      aria-label={t(\"Profile menu\")}\n      icon={\n        <Avatar\n          bg=\"mode.secondary\"\n          name={data?.profile_fullname ?? \" \"}\n          size=\"xs\"\n          src={`https://i.pravatar.cc/80?u=${data?.profile_name ?? \"fallback\"}`}\n        />\n      }\n    />\n  )\n}\n","import { keyframes } from \"@chakra-ui/system\"\n\nexport const focusStyles = {\n  _focusVisible: {\n    shadow: \"none\",\n    outline: \"1px solid black\",\n  },\n  _focus: {\n    shadow: \"none\",\n    outline: \"none\",\n  },\n}\n\nexport const fade = (startColor: string, endColor: string) =>\n  keyframes({\n    from: { borderColor: startColor, background: startColor, opacity: 0.33 },\n    to: { borderColor: endColor, background: endColor, opacity: 0 },\n  })\n\nexport const skeletonProps = {\n  startColor: \"mode.text2\",\n  endColor: \"mode.background\",\n  fadeDuration: 1.25,\n}\n\nexport const loadingAnimation = `${skeletonProps.fadeDuration}s linear infinite alternate ${fade(\n  skeletonProps.startColor,\n  skeletonProps.endColor\n)}`\n","import { ReportHandler } from \"web-vitals\"\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","import { Container, Flex, Input, Link, Stack } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport * as Button from \"../Button/Button\"\nimport { ProfileButton } from \"../ProfileButton/ProfileButton\"\nimport { ReactComponent as Logo } from \"resources/logo.svg\"\nimport { focusStyles } from \"theme/utils\"\n\nexport const AppBar: React.FC = () => (\n  <Flex\n    align=\"center\"\n    as=\"header\"\n    bg=\"mode.backgroundAlt\"\n    borderBottomColor=\"mode.border\"\n    borderBottomWidth=\"1px\"\n    h={14}\n    justify=\"space-between\"\n    left={0}\n    pos=\"fixed\"\n    px={4}\n    py={1}\n    right={0}\n    zIndex=\"banner\"\n  >\n    <Container>\n      <Stack align=\"center\" direction=\"row\" spacing={2}>\n        <Brand />\n        <Search />\n        <Nav />\n      </Stack>\n    </Container>\n  </Flex>\n)\n\nconst Brand: React.FC = () => (\n  <Flex flex={1}>\n    <Link {...focusStyles} aria-label=\"Killergram\" color=\"mode.text1\" tabIndex={0}>\n      <Logo data-testid=\"logo\" height=\"1.65rem\" />\n    </Link>\n  </Flex>\n)\n\nconst Search: React.FC = () => (\n  <Flex flex={1} justify=\"center\">\n    <Input maxW=\"215px\" placeholder=\"Search\" size=\"sm\" textAlign=\"center\" />\n  </Flex>\n)\n\nconst Nav: React.FC = () => (\n  <Stack as=\"nav\" direction=\"row\" flex={1} justifyContent=\"flex-end\" spacing={2}>\n    <Button.HomeButton />\n    <Button.DirectMessagesButton />\n    <Button.NewPostButton />\n    <Button.FindPeopleButton />\n    <Button.ActivityFeedButton />\n    <ProfileButton />\n  </Stack>\n)\n","import { IconButton, useColorMode } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { ColorModeDark, ColorModeLight } from \"../Icon/Icon\"\n\nexport const ColorModeSwitcher: React.FC = () => {\n  const { t } = useTranslation()\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  const ColorModeIcon = colorMode === \"dark\" ? ColorModeDark : ColorModeLight\n\n  return (\n    <IconButton\n      aria-label={t(\"Change color mode to {{mode}}\", { mode: colorMode === \"dark\" ? \"Light\" : \"Dark\" })}\n      bg={colorMode === \"dark\" ? \"rgba(255,255,255,.05)\" : \"rgba(0,0,0,.05)\"}\n      color=\"mode.text1\"\n      icon={<ColorModeIcon />}\n      size=\"sm\"\n      textTransform=\"capitalize\"\n      isRound\n      onClick={toggleColorMode}\n    />\n  )\n}\n","import { Button, Heading, Stack, StackProps, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\ntype ErrorMessageProps = StackProps & {\n  name: string\n  message: string\n  onRetry?: () => void\n}\n\nexport const ErrorMessage: React.FC<ErrorMessageProps> = ({ name, message, onRetry, ...stackProps }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Stack\n      align=\"center\"\n      borderColor=\"mode.border\"\n      borderRadius=\"md\"\n      borderWidth=\"1px\"\n      p={4}\n      spacing={4}\n      {...stackProps}\n    >\n      <Heading color=\"mode.text1\" fontSize=\"2xl\" lineHeight={4}>\n        {t(name)}\n      </Heading>\n      <Text color=\"mode.text2\">{t(message)}</Text>\n      {onRetry && (\n        <Button color=\"mode.text4\" mt={2} size=\"sm\" textTransform=\"uppercase\" variant=\"outline\" onClick={onRetry}>\n          {t(\"Retry\")}\n        </Button>\n      )}\n    </Stack>\n  )\n}\n","import { Avatar, Box, Stack, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport { Profile } from \"api\"\n\nexport const FollowingProfile: React.FC<Profile> = ({ profile_name }) => (\n  <Stack align=\"center\" cursor=\"pointer\" justify=\"center\">\n    <Box layerStyle=\"avatarBorder\">\n      <Avatar bg=\"mode.secondary\" name={profile_name} size=\"lg\" src={`https://i.pravatar.cc/80?u=${profile_name}`} />\n    </Box>\n    <Text fontSize=\"xs\" overflow=\"hidden\" textAlign=\"center\" textOverflow=\"ellipsis\" w={16} whiteSpace=\"nowrap\">\n      {profile_name}\n    </Text>\n  </Stack>\n)\n\nexport const FollowingProfileSkeleton: React.FC = () => (\n  <Stack align=\"center\" cursor=\"pointer\" justify=\"center\" spacing={3}>\n    <Box borderColor=\"mode.text1\" layerStyle=\"avatarBorder\">\n      <Avatar bg=\"mode.text1\" name=\" \" size=\"lg\" />\n    </Box>\n    <Box layerStyle=\"skeleton\" w={16} />\n  </Stack>\n)\n","import { Stack } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport { ErrorMessage } from \"../ErrorMessage/ErrorMessage\"\nimport { FollowingProfile, FollowingProfileSkeleton } from \"./FollowingProfile\"\nimport { Profile, useGetProfiles } from \"api\"\n\nexport const Following: React.FC = () => {\n  const { data = [], error, isLoading, refetch } = useGetProfiles()\n\n  if (isLoading) return <FollowingLoading />\n\n  if (error) return <ErrorMessage {...error.response?.data} onRetry={refetch} />\n\n  return <FollowingLoaded profiles={data} />\n}\n\nconst FollowingLoaded: React.FC<{ profiles: Profile[] }> = ({ profiles }) => (\n  <Stack\n    as=\"section\"\n    bg=\"mode.backgroundAlt\"\n    borderColor=\"mode.border\"\n    borderWidth=\"1px\"\n    direction=\"row\"\n    overflow=\"hidden\"\n    px={2}\n    py={4}\n  >\n    {profiles.map((profile) => (\n      <FollowingProfile key={profile.profile_name} {...profile} />\n    ))}\n  </Stack>\n)\n\nconst PLACEHOLDER_COUNT = 8\n\nconst FollowingLoading: React.FC = () => (\n  <Stack\n    as=\"section\"\n    bg=\"mode.backgroundAlt\"\n    borderColor=\"mode.border\"\n    borderWidth=\"1px\"\n    direction=\"row\"\n    layerStyle=\"loading\"\n    overflow=\"hidden\"\n    px={2}\n    py={4}\n  >\n    {new Array(PLACEHOLDER_COUNT).fill(0).map((_, i) => (\n      <FollowingProfileSkeleton key={i} />\n    ))}\n  </Stack>\n)\n","import { IconButton, IconButtonProps, IconProps } from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport * as Icon from \"../Icon/Icon\"\n\ntype ToggleButtonInstanceProps = Omit<IconButtonProps, \"icon\" | \"aria-label\"> & {\n  isToggled?: boolean\n  iconProps?: IconProps\n}\n\ntype ToggleButtonProps = ToggleButtonInstanceProps & {\n  icons: [toggled: React.ReactElement, untoggled: React.ReactElement]\n  labels: [toggled: string, untoggled: string]\n}\n\nexport type { ToggleButtonInstanceProps as ToggleButtonProps }\n\nexport const ToggleButton: React.FC<ToggleButtonProps> = ({\n  icons,\n  labels,\n  isToggled: defaultIsToggled,\n  iconProps,\n  ...iconButtonProps\n}) => {\n  const { t } = useTranslation()\n  const [isToggled, setIsToggled] = useState(defaultIsToggled)\n\n  const index = isToggled ? 0 : 1\n\n  const props: IconButtonProps = {\n    ...iconButtonProps,\n    \"aria-label\": t(labels[index]),\n    icon: icons[index],\n    outline: \"none\",\n  }\n\n  return <IconButton size=\"md\" {...props} onClick={() => setIsToggled(!isToggled)} />\n}\n\nexport const LikeButton: React.FC<ToggleButtonInstanceProps> = ({ isToggled = false, iconProps, ...buttonProps }) => (\n  <ToggleButton\n    {...buttonProps}\n    icons={[\n      <Icon.HeartFilledIcon {...(iconProps as any)} key=\"toggled\" />,\n      <Icon.HeartOutlineIcon {...(iconProps as any)} key=\"untoggled\" />,\n    ]}\n    isToggled={isToggled}\n    labels={[\"Unlike\", \"Like\"]}\n  />\n)\n\nexport const SaveButton: React.FC<ToggleButtonInstanceProps> = ({ isToggled = false, iconProps, ...buttonProps }) => (\n  <ToggleButton\n    {...buttonProps}\n    icons={[\n      <Icon.SaveFilledIcon {...(iconProps as any)} key=\"toggled\" />,\n      <Icon.SaveOutlineIcon {...(iconProps as any)} key=\"untoggled\" />,\n    ]}\n    labels={[\"Remove\", \"Save\"]}\n  />\n)\n","import { Button as ChakraButton, Input, Stack, StackProps } from \"@chakra-ui/react\"\nimport React, { ChangeEvent, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { EmojiButton } from \"../Button/Button\"\nimport { focusStyles } from \"theme/utils\"\n\nexport const PostFooter: React.FC<StackProps> = (stackProps) => {\n  const [comment, setComment] = useState(\"\")\n\n  const { t } = useTranslation()\n  const label = t(\"Add a comment…\")\n\n  return (\n    <Stack\n      align=\"center\"\n      borderColor=\"mode.border\"\n      borderTopWidth=\"1px\"\n      direction=\"row\"\n      p={2}\n      spacing={0}\n      {...stackProps}\n    >\n      <EmojiButton />\n      <Input\n        aria-label={label}\n        bg=\"none\"\n        placeholder={label}\n        size=\"sm\"\n        value={comment}\n        variant=\"ghost\"\n        onChange={({ target }: ChangeEvent<HTMLInputElement>) => setComment(target.value)}\n      />\n      <ChakraButton\n        {...focusStyles}\n        color=\"mode.text4\"\n        fontWeight=\"semibold\"\n        isDisabled={!comment}\n        px={2}\n        size=\"sm\"\n        variant=\"ghost\"\n      >\n        {t(\"Post\")}\n      </ChakraButton>\n    </Stack>\n  )\n}\n","import { Avatar, Box, Image, Link, Spacer, Stack, StackProps, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { CommentButton, DirectMessagesButton, EllipsisButton } from \"../Button/Button\"\nimport { LikeButton, SaveButton } from \"../ToggleButton/ToggleButton\"\nimport { PostFooter as Footer } from \"./PostFooter\"\nimport type { Comment as CommentProps, Date, Post as PostProps } from \"api\"\n\nexport const Post: React.FC<PostProps> = (post) => {\n  const { t } = useTranslation()\n\n  return (\n    <Stack bg=\"mode.backgroundAlt\" borderColor=\"mode.border\" borderWidth=\"1px\" flex={1} fontSize=\"sm\" spacing={0}>\n      <Header {...post} />\n      <Image alt={post.post_text} objectFit=\"cover\" src={post.post_image} />\n      <ActionButtons />\n      <Likes likes={post.likes}>{t(\"{{count}} likes\", { count: post.likes.length })}</Likes>\n      <Comment px={4} py={1} text={post.post_text} username={post.profile_name} />\n      <Comments {...post} />\n      <Footer />\n    </Stack>\n  )\n}\n\nconst Header: React.FC<PostProps> = ({ profile_name, profile_picture }) => (\n  <Stack align=\"center\" bg=\"mode.background\" direction=\"row\" p={2} spacing={3}>\n    <Box layerStyle=\"avatarBorder\">\n      <Avatar name={profile_name} size=\"sm\" src={`https://i.pravatar.cc/80?u=${profile_name}`} />\n    </Box>\n    <Link flex={1} variant=\"profile\">\n      {/* real Instagram uses the name, not fullname */}\n      {profile_name}\n    </Link>\n    <EllipsisButton />\n  </Stack>\n)\n\nexport const ActionButtons: React.FC<StackProps> = (stackProps) => (\n  <Stack direction=\"row\" p={1} spacing={0} {...stackProps}>\n    <LikeButton />\n    <CommentButton />\n    <DirectMessagesButton />\n    <Spacer />\n    <SaveButton />\n  </Stack>\n)\n\nconst Likes: React.FC<Pick<PostProps, \"likes\">> = ({ likes, children }) =>\n  likes.length > 0 ? <Text children={children} cursor=\"pointer\" fontWeight=\"semibold\" px={4} /> : null\n\nexport const Comment: React.FC<StackProps & CommentProps & { canLike?: boolean }> = ({\n  username,\n  text,\n  canLike = false,\n  ...stackProps\n}) => (\n  <Stack direction=\"row\" spacing={1} {...stackProps}>\n    <Link variant=\"profile\">{username}</Link>\n    <Text flex={1}>{text}</Text>\n    {canLike && <LikeButton iconProps={{ boxSize: 3 }} size=\"xs\" />}\n  </Stack>\n)\n\nconst getDaysAgo = ({ date }: Date) => {\n  const oneDayInMs = 1000 * 60 * 60 * 24\n  const diffInTime = new Date().getTime() - new Date(date).getTime()\n\n  return Math.round(diffInTime / oneDayInMs)\n}\n\nconst Comments: React.FC<PostProps> = ({ date, comments = [] }) => {\n  const { t } = useTranslation()\n\n  if (!comments.length) return null\n\n  return (\n    <Stack pb={4} pl={4} pr={2} spacing={1}>\n      {comments.length > 2 && (\n        <Link _hover={{ textDecoration: \"none\" }} color=\"mode.text3\">\n          {t(\"View all {{comments}} comments\", { comments: comments.length })}\n        </Link>\n      )}\n      <Stack spacing={0}>\n        {comments.slice(0, 2).map((comment, i) => (\n          <Comment key={i} {...comment} canLike />\n        ))}\n      </Stack>\n      <Link color=\"mode.text3\" fontSize=\".65rem\" textTransform=\"uppercase\">\n        {t(\"{{days}} days ago\", { days: getDaysAgo(date) })}\n      </Link>\n    </Stack>\n  )\n}\n","import { Avatar, Box, Spacer, Stack } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport { EllipsisButton } from \"../Button/Button\"\nimport { ActionButtons } from \"./Post\"\nimport { PostFooter as Footer } from \"./PostFooter\"\n\nexport const PostSkeleton: React.FC = () => (\n  <Stack\n    bg=\"mode.backgroundAlt\"\n    borderColor=\"mode.border\"\n    borderWidth=\"1px\"\n    flex={1}\n    fontSize=\"sm\"\n    layerStyle=\"loading\"\n    spacing={0}\n  >\n    <Header />\n    <Box bg=\"mode.text1\" layerStyle=\"square\" />\n    <ActionButtons />\n    <Stack px={4} py={2} spacing={2}>\n      <Box layerStyle=\"skeleton\" w=\"100%\" />\n      <Box layerStyle=\"skeleton\" w=\"80%\" />\n      <Box />\n      <Box layerStyle=\"skeleton\" w=\"100%\" />\n      <Box layerStyle=\"skeleton\" w=\"80%\" />\n    </Stack>\n    <Footer />\n  </Stack>\n)\n\nconst Header: React.FC = () => (\n  <Stack align=\"center\" bg=\"mode.background\" direction=\"row\" p={2} spacing={3}>\n    <Box borderColor=\"mode.text1\" layerStyle=\"avatarBorder\">\n      <Avatar bg=\"mode.text1\" name=\" \" size=\"sm\" />\n    </Box>\n    <Box layerStyle=\"skeleton\" w={32} />\n    <Spacer />\n    <EllipsisButton />\n  </Stack>\n)\n","import { Stack, StackProps } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport { ErrorMessage } from \"../ErrorMessage/ErrorMessage\"\nimport { Post } from \"./Post\"\nimport { PostSkeleton } from \"./PostSkeleton\"\nimport { Post as PostProps, useGetPosts } from \"api\"\n\nexport const Posts: React.FC<StackProps> = (stackProps) => {\n  const { data = [], error, isLoading, refetch } = useGetPosts()\n\n  if (isLoading) return <PostsLoading {...stackProps} />\n\n  if (error) return <ErrorMessage {...error.response?.data} onRetry={refetch} />\n\n  return <PostsLoaded {...stackProps} posts={data} />\n}\n\ntype PostsLoadedProps = { posts: PostProps[] } & StackProps\n\nconst PostsLoaded: React.FC<PostsLoadedProps> = ({ posts, ...stackProps }) => (\n  <Stack {...stackProps}>\n    {posts.map((post) => (\n      <Post key={post.date.date} {...post} />\n    ))}\n  </Stack>\n)\n\nconst PLACEHOLDER_COUNT = 12\n\nconst PostsLoading: React.FC<StackProps> = (stackProps) => (\n  <Stack {...stackProps}>\n    {new Array(PLACEHOLDER_COUNT).fill(0).map((_, i) => (\n      <PostSkeleton key={i} />\n    ))}\n  </Stack>\n)\n","import { Avatar, Box, Button, Stack, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { ErrorMessage } from \"../ErrorMessage/ErrorMessage\"\nimport { UserProfile, useGetUserProfile } from \"api\"\n\nexport const ProfileSwitcher: React.FC = () => {\n  const { data, error, isLoading, refetch } = useGetUserProfile()\n\n  if (isLoading) return <ProfileSwitcherLoading />\n\n  if (error) return <ErrorMessage {...error.response?.data} onRetry={refetch} />\n\n  return <ProfileSwitcherLoaded {...data!} />\n}\n\nconst ProfileSwitcherLoaded: React.FC<UserProfile> = ({ profile_name, profile_fullname }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Stack align=\"center\" direction=\"row\" fontSize=\"sm\" mt={6} spacing={4}>\n      <Avatar\n        bg=\"mode.secondary\"\n        cursor=\"pointer\"\n        name={profile_fullname}\n        src={`https://i.pravatar.cc/80?u=${profile_name}`}\n      />\n      <Stack flex={1} spacing={0}>\n        <Text cursor=\"pointer\" fontWeight=\"semibold\">\n          {profile_name}\n        </Text>\n        <Text color=\"mode.text2\">{profile_fullname}</Text>\n      </Stack>\n      <Button variant=\"link\">{t(\"Switch\")}</Button>\n    </Stack>\n  )\n}\n\nconst ProfileSwitcherLoading: React.FC = () => (\n  <Stack align=\"center\" direction=\"row\" fontSize=\"sm\" layerStyle=\"loading\" mt={6} spacing={4}>\n    <Avatar bg=\"mode.text1\" name=\" \" />\n    <Stack flex={1} spacing={1}>\n      <Box layerStyle=\"skeleton\" w={16} />\n      <Box layerStyle=\"skeleton\" w={24} />\n    </Stack>\n    <Box layerStyle=\"skeleton\" w={10} />\n  </Stack>\n)\n","import { Avatar, Box, Button, Link, Spacer, Stack, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { Profile } from \"api\"\n\ntype SuggestionType = \"suggestion\" | \"follower\"\n\nconst label: { [key in SuggestionType]: string } = {\n  follower: \"Follows you\",\n  suggestion: \"Suggested for you\",\n}\n\nexport const Suggestion: React.FC<Profile> = ({ profile_name, profile_picture }) => {\n  const { t } = useTranslation()\n  const suggestionType = label[profile_name.length % 2 === 0 ? \"follower\" : \"suggestion\"]\n\n  return (\n    <Stack align=\"center\" direction=\"row\" spacing={3}>\n      <Avatar bg=\"mode.secondary\" cursor=\"pointer\" name={profile_name} size=\"sm\" src={profile_picture} />\n      <Stack flex={1} justify=\"center\" spacing=\"-.125rem\">\n        <Link variant=\"profile\">{profile_name}</Link>\n        <Text color=\"mode.text2\" fontSize=\"xs\">\n          {t(suggestionType)}\n        </Text>\n      </Stack>\n      <Button variant=\"link\">{t(\"Follow\")}</Button>\n    </Stack>\n  )\n}\n\nexport const SuggestionSkeleton: React.FC = () => (\n  <Stack align=\"center\" direction=\"row\" spacing={3}>\n    <Avatar bg=\"mode.text1\" cursor=\"pointer\" name=\" \" size=\"sm\" />\n    <Stack flex={1} justify=\"center\" spacing=\"1px\">\n      <Box layerStyle=\"skeleton\" w={24} />\n      <Spacer />\n      <Box layerStyle=\"skeleton\" w={20} />\n    </Stack>\n    <Box layerStyle=\"skeleton\" w={10} />\n  </Stack>\n)\n","import { Box, Button, Spacer, Stack, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { ErrorMessage } from \"../ErrorMessage/ErrorMessage\"\nimport { Suggestion, SuggestionSkeleton } from \"./Suggestion\"\nimport { Profile, useGetProfiles } from \"api\"\n\nexport const Suggestions: React.FC = () => {\n  const { data = [], error, isLoading, refetch } = useGetProfiles()\n\n  if (isLoading) return <SuggestionsLoading />\n\n  if (error) return <ErrorMessage {...error.response?.data} onRetry={refetch} />\n\n  return <SuggestionsLoaded suggestions={data} />\n}\n\nconst SuggestionsLoaded: React.FC<{ suggestions: Profile[] }> = ({ suggestions }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Stack fontSize=\"sm\" spacing={3}>\n      <Stack direction=\"row\">\n        <Text color=\"mode.text2\" flex={1} fontWeight=\"semibold\">\n          {t(\"Suggestions for you\")}\n        </Text>\n        <Button color=\"mode.text1\" variant=\"link\">\n          {t(\"See All\")}\n        </Button>\n      </Stack>\n      {suggestions.map((suggestion) => (\n        <Suggestion key={suggestion.profile_name} {...suggestion} />\n      ))}\n    </Stack>\n  )\n}\n\nconst PLACEHOLDER_COUNT = 5\n\nexport const SuggestionsLoading: React.FC = () => (\n  <Stack fontSize=\"sm\" layerStyle=\"loading\" spacing={4}>\n    <Stack direction=\"row\" py={1}>\n      <Box layerStyle=\"skeleton\" w={64} />\n      <Spacer />\n      <Box layerStyle=\"skeleton\" w={10} />\n    </Stack>\n    {new Array(PLACEHOLDER_COUNT).fill(0).map((_, i) => (\n      <SuggestionSkeleton key={i} />\n    ))}\n  </Stack>\n)\n","import { ThemeProvider, useColorMode, useTheme } from \"@chakra-ui/react\"\nimport React from \"react\"\n\n// Workaround to support mode-based colors in the theme\n// https://github.com/chakra-ui/chakra-ui/issues/1162#issuecomment-682270232\nexport const DynamicColorMode: React.FC = (props) => {\n  const { colorMode } = useColorMode()\n  const theme = useTheme()\n\n  return (\n    <ThemeProvider\n      {...props}\n      theme={{\n        ...theme,\n        colors: {\n          mode: {\n            ...theme.colors,\n            // Overwrite with mode-specific colors\n            ...theme.colors.modes?.[colorMode],\n          },\n        },\n      }}\n    />\n  )\n}\n","import defaultTheme from \"@chakra-ui/theme\"\n\nconst common = {\n  primary: \"#006cfa\",\n  secondary: \"#001533\",\n  tertiary: \"#37f49a\",\n}\n\nconst light = {\n  ...common,\n  background: \"#fafafa\",\n  backgroundAlt: \"#fff\",\n  border: \"rgb(219, 219, 219)\",\n  text1: \"#262626\",\n  text2: \"#8e8e8e\",\n  text3: \"#c7c7c7\",\n  text4: common.primary,\n}\n\ntype Colors = typeof light\n\nconst dark: Colors = {\n  ...common,\n  background: common.secondary,\n  backgroundAlt: \"#00132f\",\n  border: \"#041e44\",\n  text1: \"#e8e6e3\",\n  text2: \"#9a9a9a\",\n  text3: \"#5f5f5f\",\n  text4: common.tertiary,\n}\n\nexport const colors = {\n  ...defaultTheme.colors,\n  ...common,\n  modes: {\n    light,\n    dark,\n  },\n}\n","import { focusStyles, skeletonProps } from \"./utils\"\n\nexport const Button = {\n  defaultProps: {\n    variant: \"plain\",\n    size: \"xs\",\n  },\n  variants: {\n    plain: {\n      bg: \"none\",\n      color: \"mode.text1\",\n      _hover: {\n        bg: \"none\",\n      },\n      ...focusStyles,\n    },\n    link: {\n      _hover: { bg: \"none\" },\n      color: \"mode.text4\",\n      size: \"xs\",\n      variant: \"ghost\",\n    },\n  },\n}\n\nexport const Container = {\n  baseStyle: {\n    maxW: 975,\n  },\n}\n\nexport const Heading = {\n  baseStyle: {\n    color: \"mode.text1\",\n  },\n}\n\nexport const Input = {\n  baseStyle: {\n    field: {\n      bg: \"mode.background\",\n    },\n  },\n}\n\nexport const Link = {\n  variants: {\n    profile: {\n      color: \"mode.text1\",\n      fontWeight: \"semibold\",\n    },\n  },\n}\n\nexport const Skeleton = {\n  defaultProps: {\n    ...skeletonProps,\n    w: \"fit-content\",\n  },\n}\n\nexport const Text = {\n  baseStyle: {\n    color: \"mode.text1\",\n  },\n}\n","import { ThemeConfig } from \"@chakra-ui/react\"\n\nimport { colors } from \"./colors\"\nimport * as components from \"./components\"\nimport { loadingAnimation } from \"./utils\"\n\nconst config: ThemeConfig = {\n  initialColorMode: \"light\",\n  useSystemColorMode: true,\n}\n\nconst layerStyles = {\n  avatarBorder: {\n    borderColor: \"mode.text1\",\n    borderRadius: \"full\",\n    borderWidth: \"2px\",\n    p: \"2px\",\n  },\n  square: {\n    _after: {\n      content: \"''\",\n      display: \"block\",\n      pb: \"100%\",\n    },\n    h: 0,\n    pt: \"100%\",\n    w: \"100%\",\n  },\n  loading: {\n    animation: loadingAnimation,\n  },\n  skeleton: {\n    h: 3,\n    bg: \"mode.text1\",\n    borderRadius: \"sm\",\n  },\n}\n\nexport const theme = {\n  colors,\n  components: { ...components },\n  config,\n  layerStyles,\n}\n","import { ChakraProvider, ColorModeScript, extendTheme } from \"@chakra-ui/react\"\nimport React from \"react\"\n\nimport { DynamicColorMode } from \"./DynamicColorMode\"\nimport { theme } from \"theme\"\n\nexport const ThemeProvider: React.FC = ({ children }) => (\n  <>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <ChakraProvider theme={extendTheme(theme)}>\n      <DynamicColorMode>{children}</DynamicColorMode>\n    </ChakraProvider>\n  </>\n)\n","import { Container, Flex, Stack, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { AppBar, ColorModeSwitcher, Following, Posts, ProfileSwitcher, Suggestions } from \"components\"\n\nexport const App: React.FC = () => (\n  <AppShell>\n    <Content />\n    <SideBar />\n  </AppShell>\n)\n\nconst AppShell: React.FC = ({ children }) => (\n  <Stack bottom={0} flex={1} left={0} pos=\"absolute\" right={0} spacing={0} top={0}>\n    <AppBar />\n    <Flex as=\"main\" bg=\"mode.background\" flex={1}>\n      <Container flex={1} minH=\"100vh\" my={20} overflow=\"auto\">\n        <Stack direction=\"row\" flex={1} spacing={8}>\n          {children}\n        </Stack>\n      </Container>\n    </Flex>\n    <Flex bottom={4} pos=\"fixed\" right={4}>\n      <ColorModeSwitcher />\n    </Flex>\n  </Stack>\n)\n\nconst Content: React.FC = () => (\n  <Stack as=\"section\" flex={2} spacing={6}>\n    <Following />\n    <Posts />\n  </Stack>\n)\n\nconst SideBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Stack as=\"aside\" flex={1} spacing={6}>\n      <ProfileSwitcher />\n      <Suggestions />\n      <Text color=\"mode.text3\" fontSize=\"xs\" textTransform=\"uppercase\">\n        &copy; {new Date().getFullYear()} {t(\"Killergram from Charlie\")}\n      </Text>\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { render } from \"react-dom\"\nimport { QueryClient, QueryClientProvider } from \"react-query\"\n\nimport \"./i18n\"\nimport { App } from \"./app\"\nimport { reportWebVitals } from \"./reportWebVitals\"\nimport { ThemeProvider } from \"components\"\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n    },\n  },\n})\n\nrender(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}